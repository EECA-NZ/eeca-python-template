---
# This file defines pre-commit and pre-push hooks.
# Includes a virtual environment check and basic
# tooling (black, isort, pylint, pip-audit, yamllint).
# All Python tools run inside the already-activated .venv
repos:
  - repo: local
    hooks:
      - id: check-virtualenv-pre-commit
        name: Check virtualenv activated (pre-commit)
        entry: |
          bash -c '
          if [ -z "$VIRTUAL_ENV" ]; then
            echo "ERROR: Please activate .venv before committing."
            exit 1
          fi
          '
        language: system
        pass_filenames: false
        stages: [pre-commit]

      - id: check-virtualenv-pre-push
        name: Check virtualenv activated (pre-push)
        entry: |
          bash -c '
          if [ -z "$VIRTUAL_ENV" ]; then
            echo "ERROR: Please activate .venv before pushing."
            exit 1
          fi
          '
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: black
        name: black (venv)
        entry: black
        language: system
        types: [python]
        stages: [pre-commit]

      - id: isort
        name: isort (venv)
        entry: isort --profile black
        language: system
        types: [python]
        stages: [pre-commit]

      - id: pylint
        name: pylint
        entry: pylint --rcfile=.pylintrc
        language: system
        types: [python]
        pass_filenames: true
        stages: [pre-commit]

      - id: yamllint
        name: yamllint (venv)
        entry: yamllint
        language: system
        types: [yaml]
        stages: [pre-commit]

      - id: pip-audit
        name: pip-audit
        entry: python scripts/pip_audit_hook.py
        language: system
        pass_filenames: false
        stages: [pre-push]
    
      - id: cz-check-any-branch
        name: commitizen check on any branch (pre-push)
        language: system
        pass_filenames: false
        stages: [pre-push]
        entry: |
          bash -c '
            status=0
            while read -r local_ref local_sha remote_ref remote_sha
            do
              case "$remote_ref" in
                refs/heads/*)
                  if [ "$remote_sha" = "0000000000000000000000000000000000000000" ]; then
                    range="$local_sha"
                  else
                    range="$remote_sha..$local_sha"
                  fi
                  echo "Running cz check for $remote_ref on range: $range"
                  cz check --rev-range "$range" || status=1
                  ;;
                *)
                  :
                ;;
              esac
            done
            exit $status
          '
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.27.0
    hooks:
      - id: commitizen
        stages: [commit-msg]